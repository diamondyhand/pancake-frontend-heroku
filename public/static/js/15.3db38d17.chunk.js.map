{"version":3,"sources":["views/Teams/components/TeamCard.tsx","views/Teams/Team.tsx","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx","views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx"],"names":["Wrapper","styled","div","theme","mediaQueries","md","Avatar","img","AvatarWrap","StyledCard","Card","StyledCardHeader","CardHeader","bg","TeamName","Heading","attrs","as","StatRow","TeamCard","team","t","useTranslation","background","src","images","alt","color","textColor","name","description","StatBox","icon","CommunityIcon","title","users","subtitle","PrizeIcon","isDisabled","ComingSoon","Team","idStr","useParams","id","Number","isValidTeamId","teams","findIndex","useTeam","Page","TeamHeader","mb","to","alignItems","PageLoader","HeaderWrapper","colors","textSubtle","children","flexDirection","justifyContent","p","width","height","scale","NoProfileCard","isActive","Link","mt","useProfile","isInitialized","profile","showProfileCallout","bold","SecondaryCard","Text","tertiary","defaultProps","Icon","props","mr","textTransform","fontSize"],"mappings":"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","file":"static/js/15.3db38d17.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardHeader, CardBody, CommunityIcon, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { Team } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport ComingSoon from 'views/Profile/components/ComingSoon'\nimport StatBox from 'views/Profile/components/StatBox'\n\ninterface TeamCardProps {\n  team: Team\n}\n\nconst Wrapper = styled.div`\n  padding-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 24px;\n  }\n`\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n  height: 64px;\n  margin-top: -12px;\n  width: 64px;\n  border: solid 2px white;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 128px;\n    margin-top: -24px;\n    width: 128px;\n  }\n`\n\nconst AvatarWrap = styled.div`\n  margin-bottom: 8px;\n  text-align: center;\n`\n\nconst StyledCard = styled(Card)`\n  overflow: visible;\n`\n\nconst StyledCardHeader = styled(CardHeader)<{ bg: string }>`\n  position: relative;\n  background: url(${({ bg }) => bg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  border-radius: 32px 32px 0 0;\n  padding-top: 0;\n  text-align: center;\n`\n\nconst TeamName = styled(Heading).attrs({ as: 'h2' })`\n  font-size: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n  }\n`\n\nconst StatRow = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 32px;\n  }\n`\n\nconst TeamCard: React.FC<TeamCardProps> = ({ team }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <StyledCard>\n        <StyledCardHeader bg={`/images/teams/${team.background}`}>\n          <AvatarWrap>\n            <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\n          </AvatarWrap>\n          <TeamName color={team.textColor}>{team.name}</TeamName>\n          <Text as=\"p\" color={team.textColor}>\n            {t(team.description)}\n          </Text>\n        </StyledCardHeader>\n        <CardBody>\n          <StatRow>\n            <StatBox icon={CommunityIcon} title={team.users} subtitle={t('Active Members')} />\n            <StatBox icon={PrizeIcon} title={t('Coming Soon')} subtitle={t('Team Points')} isDisabled />\n          </StatRow>\n          <Heading as=\"h3\">{t('Team Achievements')}</Heading>\n          <ComingSoon />\n        </CardBody>\n      </StyledCard>\n    </Wrapper>\n  )\n}\n\nexport default TeamCard\n","import React from 'react'\nimport Page from 'components/Layout/Page'\nimport { Link, Redirect, useParams } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text } from '@pancakeswap/uikit'\nimport PageLoader from 'components/Loader/PageLoader'\nimport teams from 'config/constants/teams'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTeam } from 'state/hooks'\nimport TeamCard from './components/TeamCard'\nimport TeamHeader from './components/TeamHeader'\n\nconst Team = () => {\n  const { id: idStr }: { id: string } = useParams()\n  const id = Number(idStr)\n  const { t } = useTranslation()\n  const isValidTeamId = teams.findIndex((team) => team.id === id) !== -1\n  const team = useTeam(id)\n\n  if (!isValidTeamId) {\n    return <Redirect to=\"/404\" />\n  }\n\n  if (!team) {\n    return <PageLoader />\n  }\n\n  return (\n    <Page>\n      <TeamHeader />\n      <Flex mb=\"24px\">\n        <Link to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </Link>\n      </Flex>\n      <TeamCard team={team} />\n    </Page>\n  )\n}\n\nexport default Team\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import React from 'react'\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Link } from 'react-router-dom'\n\nconst NoProfileCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card mb=\"32px\" isActive>\n      <CardBody>\n        <Flex\n          alignItems={['start', null, 'center']}\n          justifyContent={['start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <div>\n            <Heading scale=\"lg\" mb=\"8px\">\n              {t('You havenâ€™t set up your profile yet!')}\n            </Heading>\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\n          </div>\n          <Button as={Link} to=\"/profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\n            {t('Set up now')}\n          </Button>\n        </Flex>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NoProfileCard\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport HeaderWrapper from 'views/Profile/components/HeaderWrapper'\nimport NoProfileCard from './NoProfileCard'\n\nconst TeamHeader = () => {\n  const { t } = useTranslation()\n  const { isInitialized, profile } = useProfile()\n  const showProfileCallout = isInitialized && !profile\n\n  return (\n    <>\n      {showProfileCallout && <NoProfileCard />}\n      <HeaderWrapper>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Teams & Profiles')}\n        </Heading>\n        <Text bold>\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\n        </Text>\n      </HeaderWrapper>\n    </>\n  )\n}\n\nexport default TeamHeader\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n"],"sourceRoot":""}